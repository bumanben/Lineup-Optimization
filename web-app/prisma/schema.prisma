// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum Position {
    PITCHER
    CATCHER
    FIRST_BASE
    SECOND_BASE
    THIRD_BASE
    LEFT_FIELD
    CENTER_FIELD
    RIGHT_FIELD
    SHORTSTOP
    DESIGNATED_HITTER
}

enum BattingHand {
    LEFT
    RIGHT
    SWITCH
}

enum League {
    MLB
    ALPB
    CUSTOM
}

model Post {
    id        Int      @id @default(autoincrement())
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([name])
}

model User {
    email  String   @id @unique
    lineup Lineup[]
}

model Player {
    id           String        @id @default(cuid())
    firstName    String
    lastName     String
    position     Position
    seasons      Season[]
    lineupEntry  LineupEntry[]
    battingHand  BattingHand
    jerseyNumber Int?
    salary       Int?
    birthday     DateTime?
}

model Season {
    id               String  @id @default(cuid())
    year             Int?
    plateAppearances Int
    runs             Int
    hits             Int
    singles          Int
    doubles          Int
    triples          Int
    homeruns         Int
    walks            Int
    hitByPitch       Int
    intentionalWalks Int
    player           Player? @relation(fields: [playerId], references: [id])
    playerId         String?
    teamId           String?
    league           League
}

model Lineup {
    id        String        @id @default(cuid())
    user      User          @relation(fields: [userEmail], references: [email])
    entries   LineupEntry[]
    userEmail String
}

model LineupEntry {
    lineupId    String
    playerId    String
    battingSpot Int
    player      Player @relation(fields: [playerId], references: [id])
    lineup      Lineup @relation(fields: [lineupId], references: [id])

    @@id([lineupId, playerId])
}
